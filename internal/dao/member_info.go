// =================================================================================
// This file is auto-generated by the GoFrame CLI tool. You may modify it as needed.
// =================================================================================

package dao

import (
	"context"
	"yclw/ygpay/internal/dao/internal"
	"yclw/ygpay/internal/model/entity"
)

// memberInfoDao is the data access object for the table t_member_info.
// You can define custom methods on it to extend its functionality as needed.
type memberInfoDao struct {
	*internal.MemberInfoDao
}

var (
	// MemberInfo is a globally accessible object for table t_member_info operations.
	MemberInfo = memberInfoDao{internal.NewMemberInfoDao()}
)

// Add your custom methods and functionality below.

// FindByUsername 根据用户名查询用户信息
func (d *memberInfoDao) FindByUsername(ctx context.Context, username string) (memberInfo *entity.MemberInfo, err error) {
	model := d.Ctx(ctx).Where(d.Columns().Username, username)
	err = model.Scan(&memberInfo)
	return
}

// FindIdByUid 根据UID查询用户ID
func (d *memberInfoDao) FindIdByUid(ctx context.Context, uid string) (id int64, err error) {
	model := d.Ctx(ctx).Where(d.Columns().Uid, uid)
	err = model.Scan(&id)
	return
}

// FindByUid 根据UID查询用户信息
func (d *memberInfoDao) FindByUid(ctx context.Context, uid string) (memberInfo *entity.MemberInfo, err error) {
	model := d.Ctx(ctx).Where(d.Columns().Uid, uid)
	err = model.Scan(&memberInfo)
	return
}

// FindByUserIds 根据用户ID列表查询用户信息
func (d *memberInfoDao) FindByUserIds(ctx context.Context, userIds []int64) (memberInfos []*entity.MemberInfo, err error) {
	err = d.Ctx(ctx).WhereIn(d.Columns().Id, userIds).Scan(&memberInfos)
	return
}

// FindAll 获取所有用户信息
func (d *memberInfoDao) FindAll(ctx context.Context) (memberInfos []*entity.MemberInfo, err error) {
	err = d.Ctx(ctx).Scan(&memberInfos)
	return
}

// Create 创建用户
func (d *memberInfoDao) Create(ctx context.Context, member *entity.MemberInfo) (err error) {
	return
}
