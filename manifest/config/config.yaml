# 系统配置
system:
  # 应用名称
  appName: "ygpay"
  # debug开关，开启后接口出现错误时会向前端输出堆栈信息，可选：false|true，默认为true
  debug: true
  # gf运行模式，可选：not-set|develop|testing|staging|product。product模式下后台【开发工具】菜单自动隐藏
  mode: "develop"
  # 时区
  timezone: "Asia/Shanghai"
  # 语言
  language: "zh-CN"
  # 全局请求日志
  log:
    switch: true                                      # 日志开关，可选：false|true，默认为true
    queue: true                                       # 是否启用队列，启用时需要配置队列信息，可选：false|true，默认为true
    module: [ "admin", "api", "default" ]             # 需要记录的模块
    skipCode: [ ]                                     # 不记录的状态码，如： ["0", "-1"]
  # 系统日志，用于在后台统计异常日志
  serveLog:
    switch: true                                      # 日志开关，可选：false|true，默认为true
    queue: true                                       # 是否启用队列，启用时需要配置队列信息，可选：false|true，默认为true
    levelFormat: [ "WARN", "ERRO", "FATA", "PANI" ]   # 需要记录的等级
  # 插件资源目录，用于静态文件和模版文件的路径，默认为resource
  addonsResourcePath: "resource"


# 统一默认日志配置
defaultLogger: &defaultLogger
  level: "all"
  flags: 42
  file: "{Y-m-d}.log"                     # 日志文件格式。默认为"{Y-m-d}.log"
  stdoutColorDisabled: false              # 关闭终端的颜色打印。可选：false|true，默认false
  writerColorEnable: false                # 日志文件是否带上颜色。可选：false|true，默认false，表示不带颜色
  rotateExpire: "7d"                      # 日志保留天数
  rotateBackupLimit: 2                    # 最大备份数量
  rotateBackupCompress: 2                 # 日志文件压缩级别，0-9,9最高


# gf配置，配置参考：https://goframe.org/pages/viewpage.action?pageId=44449486
server:
  address: ":8000"                            # 本地监听地址。默认":8000"，多个地址以","号分隔。例如："192.168.2.3:8000,10.0.3.10:8001"
  openapiPath: "/api.json"                    # OpenAPI接口文档地址
  swaggerPath: "/swagger"                     # 内置SwaggerUI展示地址
  DumpRouterMap: false                        # 是否在Server启动时打印所有的路由列表。
  logPath: "logs/server"                      # 服务日志保存路径
  ErrorStack: true                            # 当Server捕获到异常时是否记录堆栈信息到日志中。默认为true
  ErrorLogEnabled: true                       # 是否记录异常日志信息到日志中。默认为true
  errorLogPattern: "error/{Y-m-d}.log"        # 异常错误日志文件格式。默认为"error-{Ymd}.log"
  accessLogEnabled: true                      # 是否记录访问日志。默认为false
  accessLogPattern: "access/{Y-m-d}.log"      # 访问日志文件格式。默认为"access-{Ymd}.log"
  maxHeaderBytes: "100KB"                     # 请求头大小限制，请求头包括客户端提交的Cookie数据，默认设置为100KB
  clientMaxBodySize: "200MB"                  # 客户端提交的Body大小限制，同时也影响文件上传大小，默认设置为200MB
  serverAgent: "HG HTTP Server"               # 服务端Agent信息。默认为"HG HTTP Server"
  # PProf配置
  pprofEnabled: true                          # 是否开启PProf性能调试特性。默认为false
  pprofPattern: "/pprof"                      # 开启PProf时有效，表示PProf特性的页面访问路径，对当前Server绑定的所有域名有效。
  # 服务日志配置
  logger:
    path: "logs/server"                       # 日志文件路径。默认为空，表示关闭，仅输出到终端
    <<: *defaultLogger

# 日志配置
logger:
  # 全局日志：g.Log()
  path: "logs/logger"                       # 日志文件路径。默认为空，表示关闭，仅输出到终端
  <<: *defaultLogger
  # 定时任务：g.Log("cron")
  cron:
    path: "logs/cron"                       # 日志文件路径。默认为空，表示关闭，仅输出到终端
    <<: *defaultLogger
  # 消息队列：g.Log("cron")
  queue:
    path: "logs/queue"                      # 日志文件路径。默认为空，表示关闭，仅输出到终端
    <<: *defaultLogger
  # tcp服务器：g.Log("tcpServer")
  tcpServer:
    path: "logs/tcpServer"                  # 日志文件路径。默认为空，表示关闭，仅输出到终端
    <<: *defaultLogger
  # tcp客户端：g.Log("tcpClient")
  tcpClient:
    path: "logs/tcpClient"                  # 日志文件路径。默认为空，表示关闭，仅输出到终端
    <<: *defaultLogger

# 路由配置
router:
  # 后台
  admin:
    # 前缀
    prefix: "/admin"
    # 不需要验证登录的路由地址
    exceptLogin: [
      "/sms/send",              # 短信验证码
      "/wechat/authorizeCall",  # 微信用户授权回调
    ]
    # 不需要验证权限的路由地址
    exceptAuth: [
      "/member/info",                   # 登录用户信息
      "/role/dynamic",                  # 获取动态路由
      "/notice/pullMessages",           # 拉取我的消息
      "/notice/readAll",                # 设置全部已读公告
      "/notice/upRead",                 # 已读指定公告
      "/dictData/option",               # 单个数据字典
      "/dictData/options",              # 多个数据字典
      "/member/option",                 # 用户选项
    ]
  # 接口
  api:
    # 前缀
    prefix: "/api"
    # 不需要验证登录的路由地址
    exceptLogin: [ ]
  # websocket
  websocket:
    # 前缀
    prefix: "/socket"
    # 不需要验证登录的路由地址
    exceptLogin: [ ]
  # 前台页面
  home:
    # 前缀
    prefix: "/home"
    # 不需要验证登录的路由地址
    exceptLogin: [ ]


# 缓存驱动
cache:
  adapter: "memory"                    # 缓存驱动方式，支持：memory|redis，不填默认memory
# Redis. 配置参考：https://goframe.org/pages/viewpage.action?pageId=1114217
redis:
  default:
    address: "127.0.0.1:6379"
    db: "2"
    pass: ""
    idleTimeout: "20"

# 登录令牌
token:
  # 访问令牌
  access:
    secretKey: "ygpay1141514"                  # 令牌加密秘钥，考虑安全问题生产环境中请修改默认值
    expires: 10000                        # 令牌有效期，单位：秒
    issuer: "yclw"                        # 签发人
    audience: "ygpay"                      # 受众
  # 刷新令牌
  refresh:
    secretKey: "ygpay123"                  # 令牌加密秘钥，考虑安全问题生产环境中请修改默认值
    expires: 604800                        # 令牌有效期，单位：秒
    issuer: "yclw"                        # 签发人
    audience: "ygpay"                      # 受众
    maxRefreshTimes: 30                    # 最大允许刷新次数，-1不限制。默认30次
    multiLogin: true                       # 是否允许多端登录

# Database. 配置参考：https://goframe.org/pages/viewpage.action?pageId=1114245
database:
  logger:
    path: "logs/database"                       # 日志文件路径。默认为空，表示关闭，仅输出到终端
    <<: *defaultLogger
    stdout: true
  default:
    link: "mysql:root:root@tcp(127.0.0.1:3306)/ygpay?loc=Local&parseTime=true&charset=utf8mb4"
    debug: true
    Prefix: "t_"

# 链路追踪
jaeger:
  switch: false                                   # 链路追踪开关，可选：true|false，默认为false
  endpoint: "127.0.0.1:6831"                      # jaeger-agent上报地址
